//--------------------------------------------------------------------------------------------
//
// Generated by X-HDL VHDL Translator - Version 2.0.0 Feb. 1, 2011
// Mon Apr 21 2014 01:17:20
//
//      Input file      : 
//      Component name  : intmultiplier_usingdsp_24_24_48_unsigned_uid4
//      Author          : 
//      Company         : 
//
//      Description     : 
//
//
//--------------------------------------------------------------------------------------------
module IntMultiplier_UsingDSP_24_24_48_unsigned_uid4(clk, rst, X, Y, R);
   input         clk;
   input         rst;
   input [23:0]  X;
   input [23:0]  Y;
   output [47:0] R;
   wire [23:0]   XX_m5;
   wire [23:0]   YY_m5;
   wire [40:0]   DSP_bh6_ch0_0;
   wire          heap_bh6_w47_0;
   reg           heap_bh6_w47_0_d1;
   wire          heap_bh6_w46_0;
   reg           heap_bh6_w46_0_d1;
   wire          heap_bh6_w45_0;
   reg           heap_bh6_w45_0_d1;
   wire          heap_bh6_w44_0;
   reg           heap_bh6_w44_0_d1;
   wire          heap_bh6_w43_0;
   reg           heap_bh6_w43_0_d1;
   wire          heap_bh6_w42_0;
   reg           heap_bh6_w42_0_d1;
   wire          heap_bh6_w41_0;
   reg           heap_bh6_w41_0_d1;
   wire          heap_bh6_w40_0;
   reg           heap_bh6_w40_0_d1;
   wire          heap_bh6_w39_0;
   reg           heap_bh6_w39_0_d1;
   wire          heap_bh6_w38_0;
   reg           heap_bh6_w38_0_d1;
   wire          heap_bh6_w37_0;
   reg           heap_bh6_w37_0_d1;
   wire          heap_bh6_w36_0;
   reg           heap_bh6_w36_0_d1;
   wire          heap_bh6_w35_0;
   reg           heap_bh6_w35_0_d1;
   wire          heap_bh6_w34_0;
   reg           heap_bh6_w34_0_d1;
   wire          heap_bh6_w33_0;
   reg           heap_bh6_w33_0_d1;
   wire          heap_bh6_w32_0;
   reg           heap_bh6_w32_0_d1;
   wire          heap_bh6_w31_0;
   reg           heap_bh6_w31_0_d1;
   wire          heap_bh6_w30_0;
   reg           heap_bh6_w30_0_d1;
   wire          heap_bh6_w29_0;
   reg           heap_bh6_w29_0_d1;
   wire          heap_bh6_w28_0;
   reg           heap_bh6_w28_0_d1;
   wire          heap_bh6_w27_0;
   reg           heap_bh6_w27_0_d1;
   wire          heap_bh6_w26_0;
   reg           heap_bh6_w26_0_d1;
   wire          heap_bh6_w25_0;
   reg           heap_bh6_w25_0_d1;
   wire          heap_bh6_w24_0;
   reg           heap_bh6_w24_0_d1;
   wire          heap_bh6_w23_0;
   reg           heap_bh6_w23_0_d1;
   wire          heap_bh6_w22_0;
   reg           heap_bh6_w22_0_d1;
   wire          heap_bh6_w21_0;
   reg           heap_bh6_w21_0_d1;
   wire          heap_bh6_w20_0;
   reg           heap_bh6_w20_0_d1;
   wire          heap_bh6_w19_0;
   reg           heap_bh6_w19_0_d1;
   wire          heap_bh6_w18_0;
   reg           heap_bh6_w18_0_d1;
   wire          heap_bh6_w17_0;
   reg           heap_bh6_w17_0_d1;
   wire          heap_bh6_w16_0;
   reg           heap_bh6_w16_0_d1;
   wire          heap_bh6_w15_0;
   reg           heap_bh6_w15_0_d1;
   wire          heap_bh6_w14_0;
   reg           heap_bh6_w14_0_d1;
   wire          heap_bh6_w13_0;
   reg           heap_bh6_w13_0_d1;
   wire          heap_bh6_w12_0;
   reg           heap_bh6_w12_0_d1;
   wire          heap_bh6_w11_0;
   reg           heap_bh6_w11_0_d1;
   wire          heap_bh6_w10_0;
   reg           heap_bh6_w10_0_d1;
   wire          heap_bh6_w9_0;
   reg           heap_bh6_w9_0_d1;
   wire          heap_bh6_w8_0;
   reg           heap_bh6_w8_0_d1;
   wire          heap_bh6_w7_0;
   reg           heap_bh6_w7_0_d1;
   wire [40:0]   DSP_bh6_ch1_0;
   wire          heap_bh6_w30_1;
   reg           heap_bh6_w30_1_d1;
   wire          heap_bh6_w29_1;
   reg           heap_bh6_w29_1_d1;
   wire          heap_bh6_w28_1;
   reg           heap_bh6_w28_1_d1;
   wire          heap_bh6_w27_1;
   reg           heap_bh6_w27_1_d1;
   wire          heap_bh6_w26_1;
   reg           heap_bh6_w26_1_d1;
   wire          heap_bh6_w25_1;
   reg           heap_bh6_w25_1_d1;
   wire          heap_bh6_w24_1;
   reg           heap_bh6_w24_1_d1;
   wire          heap_bh6_w23_1;
   reg           heap_bh6_w23_1_d1;
   wire          heap_bh6_w22_1;
   reg           heap_bh6_w22_1_d1;
   wire          heap_bh6_w21_1;
   reg           heap_bh6_w21_1_d1;
   wire          heap_bh6_w20_1;
   reg           heap_bh6_w20_1_d1;
   wire          heap_bh6_w19_1;
   reg           heap_bh6_w19_1_d1;
   wire          heap_bh6_w18_1;
   reg           heap_bh6_w18_1_d1;
   wire          heap_bh6_w17_1;
   reg           heap_bh6_w17_1_d1;
   wire          heap_bh6_w16_1;
   reg           heap_bh6_w16_1_d1;
   wire          heap_bh6_w15_1;
   reg           heap_bh6_w15_1_d1;
   wire          heap_bh6_w14_1;
   reg           heap_bh6_w14_1_d1;
   wire          heap_bh6_w13_1;
   reg           heap_bh6_w13_1_d1;
   wire          heap_bh6_w12_1;
   reg           heap_bh6_w12_1_d1;
   wire          heap_bh6_w11_1;
   reg           heap_bh6_w11_1_d1;
   wire          heap_bh6_w10_1;
   reg           heap_bh6_w10_1_d1;
   wire          heap_bh6_w9_1;
   reg           heap_bh6_w9_1_d1;
   wire          heap_bh6_w8_1;
   reg           heap_bh6_w8_1_d1;
   wire          heap_bh6_w7_1;
   reg           heap_bh6_w7_1_d1;
   wire          heap_bh6_w6_0;
   wire          heap_bh6_w5_0;
   wire          heap_bh6_w4_0;
   wire          heap_bh6_w3_0;
   wire          heap_bh6_w2_0;
   wire          heap_bh6_w1_0;
   wire          heap_bh6_w0_0;
   wire [41:0]   finalAdderIn0_bh6;
   wire [41:0]   finalAdderIn1_bh6;
   wire          finalAdderCin_bh6;
   wire [41:0]   finalAdderOut_bh6;
   wire [6:0]    tempR_bh6_0;
   reg [6:0]     tempR_bh6_0_d1;
   wire [48:0]   CompressionResult6;
   
   always @(posedge clk)
      
      begin
         heap_bh6_w47_0_d1 <= heap_bh6_w47_0;
         heap_bh6_w46_0_d1 <= heap_bh6_w46_0;
         heap_bh6_w45_0_d1 <= heap_bh6_w45_0;
         heap_bh6_w44_0_d1 <= heap_bh6_w44_0;
         heap_bh6_w43_0_d1 <= heap_bh6_w43_0;
         heap_bh6_w42_0_d1 <= heap_bh6_w42_0;
         heap_bh6_w41_0_d1 <= heap_bh6_w41_0;
         heap_bh6_w40_0_d1 <= heap_bh6_w40_0;
         heap_bh6_w39_0_d1 <= heap_bh6_w39_0;
         heap_bh6_w38_0_d1 <= heap_bh6_w38_0;
         heap_bh6_w37_0_d1 <= heap_bh6_w37_0;
         heap_bh6_w36_0_d1 <= heap_bh6_w36_0;
         heap_bh6_w35_0_d1 <= heap_bh6_w35_0;
         heap_bh6_w34_0_d1 <= heap_bh6_w34_0;
         heap_bh6_w33_0_d1 <= heap_bh6_w33_0;
         heap_bh6_w32_0_d1 <= heap_bh6_w32_0;
         heap_bh6_w31_0_d1 <= heap_bh6_w31_0;
         heap_bh6_w30_0_d1 <= heap_bh6_w30_0;
         heap_bh6_w29_0_d1 <= heap_bh6_w29_0;
         heap_bh6_w28_0_d1 <= heap_bh6_w28_0;
         heap_bh6_w27_0_d1 <= heap_bh6_w27_0;
         heap_bh6_w26_0_d1 <= heap_bh6_w26_0;
         heap_bh6_w25_0_d1 <= heap_bh6_w25_0;
         heap_bh6_w24_0_d1 <= heap_bh6_w24_0;
         heap_bh6_w23_0_d1 <= heap_bh6_w23_0;
         heap_bh6_w22_0_d1 <= heap_bh6_w22_0;
         heap_bh6_w21_0_d1 <= heap_bh6_w21_0;
         heap_bh6_w20_0_d1 <= heap_bh6_w20_0;
         heap_bh6_w19_0_d1 <= heap_bh6_w19_0;
         heap_bh6_w18_0_d1 <= heap_bh6_w18_0;
         heap_bh6_w17_0_d1 <= heap_bh6_w17_0;
         heap_bh6_w16_0_d1 <= heap_bh6_w16_0;
         heap_bh6_w15_0_d1 <= heap_bh6_w15_0;
         heap_bh6_w14_0_d1 <= heap_bh6_w14_0;
         heap_bh6_w13_0_d1 <= heap_bh6_w13_0;
         heap_bh6_w12_0_d1 <= heap_bh6_w12_0;
         heap_bh6_w11_0_d1 <= heap_bh6_w11_0;
         heap_bh6_w10_0_d1 <= heap_bh6_w10_0;
         heap_bh6_w9_0_d1 <= heap_bh6_w9_0;
         heap_bh6_w8_0_d1 <= heap_bh6_w8_0;
         heap_bh6_w7_0_d1 <= heap_bh6_w7_0;
         heap_bh6_w30_1_d1 <= heap_bh6_w30_1;
         heap_bh6_w29_1_d1 <= heap_bh6_w29_1;
         heap_bh6_w28_1_d1 <= heap_bh6_w28_1;
         heap_bh6_w27_1_d1 <= heap_bh6_w27_1;
         heap_bh6_w26_1_d1 <= heap_bh6_w26_1;
         heap_bh6_w25_1_d1 <= heap_bh6_w25_1;
         heap_bh6_w24_1_d1 <= heap_bh6_w24_1;
         heap_bh6_w23_1_d1 <= heap_bh6_w23_1;
         heap_bh6_w22_1_d1 <= heap_bh6_w22_1;
         heap_bh6_w21_1_d1 <= heap_bh6_w21_1;
         heap_bh6_w20_1_d1 <= heap_bh6_w20_1;
         heap_bh6_w19_1_d1 <= heap_bh6_w19_1;
         heap_bh6_w18_1_d1 <= heap_bh6_w18_1;
         heap_bh6_w17_1_d1 <= heap_bh6_w17_1;
         heap_bh6_w16_1_d1 <= heap_bh6_w16_1;
         heap_bh6_w15_1_d1 <= heap_bh6_w15_1;
         heap_bh6_w14_1_d1 <= heap_bh6_w14_1;
         heap_bh6_w13_1_d1 <= heap_bh6_w13_1;
         heap_bh6_w12_1_d1 <= heap_bh6_w12_1;
         heap_bh6_w11_1_d1 <= heap_bh6_w11_1;
         heap_bh6_w10_1_d1 <= heap_bh6_w10_1;
         heap_bh6_w9_1_d1 <= heap_bh6_w9_1;
         heap_bh6_w8_1_d1 <= heap_bh6_w8_1;
         heap_bh6_w7_1_d1 <= heap_bh6_w7_1;
         tempR_bh6_0_d1 <= tempR_bh6_0;
      end
   assign XX_m5 = X;
   assign YY_m5 = Y;
   assign DSP_bh6_ch0_0 = (XX_m5[23:0]) * (YY_m5[23:7]);
   assign heap_bh6_w47_0 = DSP_bh6_ch0_0[40];
   assign heap_bh6_w46_0 = DSP_bh6_ch0_0[39];
   assign heap_bh6_w45_0 = DSP_bh6_ch0_0[38];
   assign heap_bh6_w44_0 = DSP_bh6_ch0_0[37];
   assign heap_bh6_w43_0 = DSP_bh6_ch0_0[36];
   assign heap_bh6_w42_0 = DSP_bh6_ch0_0[35];
   assign heap_bh6_w41_0 = DSP_bh6_ch0_0[34];
   assign heap_bh6_w40_0 = DSP_bh6_ch0_0[33];
   assign heap_bh6_w39_0 = DSP_bh6_ch0_0[32];
   assign heap_bh6_w38_0 = DSP_bh6_ch0_0[31];
   assign heap_bh6_w37_0 = DSP_bh6_ch0_0[30];
   assign heap_bh6_w36_0 = DSP_bh6_ch0_0[29];
   assign heap_bh6_w35_0 = DSP_bh6_ch0_0[28];
   assign heap_bh6_w34_0 = DSP_bh6_ch0_0[27];
   assign heap_bh6_w33_0 = DSP_bh6_ch0_0[26];
   assign heap_bh6_w32_0 = DSP_bh6_ch0_0[25];
   assign heap_bh6_w31_0 = DSP_bh6_ch0_0[24];
   assign heap_bh6_w30_0 = DSP_bh6_ch0_0[23];
   assign heap_bh6_w29_0 = DSP_bh6_ch0_0[22];
   assign heap_bh6_w28_0 = DSP_bh6_ch0_0[21];
   assign heap_bh6_w27_0 = DSP_bh6_ch0_0[20];
   assign heap_bh6_w26_0 = DSP_bh6_ch0_0[19];
   assign heap_bh6_w25_0 = DSP_bh6_ch0_0[18];
   assign heap_bh6_w24_0 = DSP_bh6_ch0_0[17];
   assign heap_bh6_w23_0 = DSP_bh6_ch0_0[16];
   assign heap_bh6_w22_0 = DSP_bh6_ch0_0[15];
   assign heap_bh6_w21_0 = DSP_bh6_ch0_0[14];
   assign heap_bh6_w20_0 = DSP_bh6_ch0_0[13];
   assign heap_bh6_w19_0 = DSP_bh6_ch0_0[12];
   assign heap_bh6_w18_0 = DSP_bh6_ch0_0[11];
   assign heap_bh6_w17_0 = DSP_bh6_ch0_0[10];
   assign heap_bh6_w16_0 = DSP_bh6_ch0_0[9];
   assign heap_bh6_w15_0 = DSP_bh6_ch0_0[8];
   assign heap_bh6_w14_0 = DSP_bh6_ch0_0[7];
   assign heap_bh6_w13_0 = DSP_bh6_ch0_0[6];
   assign heap_bh6_w12_0 = DSP_bh6_ch0_0[5];
   assign heap_bh6_w11_0 = DSP_bh6_ch0_0[4];
   assign heap_bh6_w10_0 = DSP_bh6_ch0_0[3];
   assign heap_bh6_w9_0 = DSP_bh6_ch0_0[2];
   assign heap_bh6_w8_0 = DSP_bh6_ch0_0[1];
   assign heap_bh6_w7_0 = DSP_bh6_ch0_0[0];
   assign DSP_bh6_ch1_0 = (XX_m5[23:0]) * ({YY_m5[6:0], 10'b0000000000});
   assign heap_bh6_w30_1 = DSP_bh6_ch1_0[40];
   assign heap_bh6_w29_1 = DSP_bh6_ch1_0[39];
   assign heap_bh6_w28_1 = DSP_bh6_ch1_0[38];
   assign heap_bh6_w27_1 = DSP_bh6_ch1_0[37];
   assign heap_bh6_w26_1 = DSP_bh6_ch1_0[36];
   assign heap_bh6_w25_1 = DSP_bh6_ch1_0[35];
   assign heap_bh6_w24_1 = DSP_bh6_ch1_0[34];
   assign heap_bh6_w23_1 = DSP_bh6_ch1_0[33];
   assign heap_bh6_w22_1 = DSP_bh6_ch1_0[32];
   assign heap_bh6_w21_1 = DSP_bh6_ch1_0[31];
   assign heap_bh6_w20_1 = DSP_bh6_ch1_0[30];
   assign heap_bh6_w19_1 = DSP_bh6_ch1_0[29];
   assign heap_bh6_w18_1 = DSP_bh6_ch1_0[28];
   assign heap_bh6_w17_1 = DSP_bh6_ch1_0[27];
   assign heap_bh6_w16_1 = DSP_bh6_ch1_0[26];
   assign heap_bh6_w15_1 = DSP_bh6_ch1_0[25];
   assign heap_bh6_w14_1 = DSP_bh6_ch1_0[24];
   assign heap_bh6_w13_1 = DSP_bh6_ch1_0[23];
   assign heap_bh6_w12_1 = DSP_bh6_ch1_0[22];
   assign heap_bh6_w11_1 = DSP_bh6_ch1_0[21];
   assign heap_bh6_w10_1 = DSP_bh6_ch1_0[20];
   assign heap_bh6_w9_1 = DSP_bh6_ch1_0[19];
   assign heap_bh6_w8_1 = DSP_bh6_ch1_0[18];
   assign heap_bh6_w7_1 = DSP_bh6_ch1_0[17];
   assign heap_bh6_w6_0 = DSP_bh6_ch1_0[16];
   assign heap_bh6_w5_0 = DSP_bh6_ch1_0[15];
   assign heap_bh6_w4_0 = DSP_bh6_ch1_0[14];
   assign heap_bh6_w3_0 = DSP_bh6_ch1_0[13];
   assign heap_bh6_w2_0 = DSP_bh6_ch1_0[12];
   assign heap_bh6_w1_0 = DSP_bh6_ch1_0[11];
   assign heap_bh6_w0_0 = DSP_bh6_ch1_0[10];
   assign finalAdderIn0_bh6 = {1'b0, heap_bh6_w47_0_d1, heap_bh6_w46_0_d1, heap_bh6_w45_0_d1, heap_bh6_w44_0_d1, heap_bh6_w43_0_d1, heap_bh6_w42_0_d1, heap_bh6_w41_0_d1, heap_bh6_w40_0_d1, heap_bh6_w39_0_d1, heap_bh6_w38_0_d1, heap_bh6_w37_0_d1, heap_bh6_w36_0_d1, heap_bh6_w35_0_d1, heap_bh6_w34_0_d1, heap_bh6_w33_0_d1, heap_bh6_w32_0_d1, heap_bh6_w31_0_d1, heap_bh6_w30_1_d1, heap_bh6_w29_1_d1, heap_bh6_w28_1_d1, heap_bh6_w27_1_d1, heap_bh6_w26_1_d1, heap_bh6_w25_1_d1, heap_bh6_w24_1_d1, heap_bh6_w23_1_d1, heap_bh6_w22_1_d1, heap_bh6_w21_1_d1, heap_bh6_w20_1_d1, heap_bh6_w19_1_d1, heap_bh6_w18_1_d1, heap_bh6_w17_1_d1, heap_bh6_w16_1_d1, heap_bh6_w15_1_d1, heap_bh6_w14_1_d1, heap_bh6_w13_1_d1, heap_bh6_w12_1_d1, heap_bh6_w11_1_d1, heap_bh6_w10_1_d1, heap_bh6_w9_1_d1, heap_bh6_w8_1_d1, heap_bh6_w7_1_d1};
   assign finalAdderIn1_bh6 = {1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, heap_bh6_w30_0_d1, heap_bh6_w29_0_d1, heap_bh6_w28_0_d1, heap_bh6_w27_0_d1, heap_bh6_w26_0_d1, heap_bh6_w25_0_d1, heap_bh6_w24_0_d1, heap_bh6_w23_0_d1, heap_bh6_w22_0_d1, heap_bh6_w21_0_d1, heap_bh6_w20_0_d1, heap_bh6_w19_0_d1, heap_bh6_w18_0_d1, heap_bh6_w17_0_d1, heap_bh6_w16_0_d1, heap_bh6_w15_0_d1, heap_bh6_w14_0_d1, heap_bh6_w13_0_d1, heap_bh6_w12_0_d1, heap_bh6_w11_0_d1, heap_bh6_w10_0_d1, heap_bh6_w9_0_d1, heap_bh6_w8_0_d1, heap_bh6_w7_0_d1};
   assign finalAdderCin_bh6 = 1'b0;
   
   IntAdder_42_f300_uid15 Adder_final6_0(.clk(clk), .rst(rst), .Cin(finalAdderCin_bh6), .R(finalAdderOut_bh6), .X(finalAdderIn0_bh6), .Y(finalAdderIn1_bh6));
   assign tempR_bh6_0 = {heap_bh6_w6_0, heap_bh6_w5_0, heap_bh6_w4_0, heap_bh6_w3_0, heap_bh6_w2_0, heap_bh6_w1_0, heap_bh6_w0_0};
   assign CompressionResult6 = {finalAdderOut_bh6, tempR_bh6_0_d1};
   assign R = CompressionResult6[47:0];
   
endmodule
